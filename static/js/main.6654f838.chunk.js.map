{"version":3,"sources":["util/engine/cardSequence.js","util/engine/card.js","assets/images/cardback.jpg","components/fieldInput/index.js","util/store.js","util/auth.js","util/fetch.js","container/signup.js","container/login.js","util/engine/deck.js","util/engine/player.js","util/engine/engine.js","components/card/index.js","components/opponentCards/index.js","components/playingCards/actionButton.js","components/playingCards/index.js","components/playerCards/index.js","components/catet/index.js","container/room.js","container/lobby.js","components/customRoute/index.js","app.js","index.js"],"names":["Card","require","CardSequence","constructor","this","cards","length","type","cardTable","addCards","names","forEach","name","push","update","removeCards","cardDisplayNames","cardDisplayName","filter","card","displayName","sort","a","b","value","seq","cardNumbers","map","number","cardFaces","face","cardValues","numberValue","straightCounter","i","countNumbers","countFaces","x","Object","keys","royalCounter","includes","recognize","numbers","numberValues","faces","Diamond","Club","Heart","Spade","facesRange","paket","pair","tris","straight","flush","fullhouse","bomb","straightflush","royalflush","baseDeck","index","splitted","split","suitEmoji","color","module","exports","StyledDiv","styled","div","props","width","FieldInput","data","show","bufferHandler","bufferValue","submitHandler","field","Fade","in","unmountOnExit","key","className","id","minLength","min","maxLength","max","autoFocus","placeholder","onChange","e","target","onKeyUp","keyCode","htmlFor","litleInfo","StoreContext","createContext","children","useState","globalWidthState","setGlobalWidth","isPlayingState","setPlaying","playingCardState","_setPlayingCard","selectedCardState","setSelectedCard","isPlayableState","setIsPlayable","roomState","setRoom","globalWaitState","setGlobalWait","waitState","setWait","userInfoState","_setUserInfo","_globalError","setGlobalError","globalTitle","_setGlobalTitle","store","globalWidth","isPlaying","isPlayable","playingCard","setPlayingCard","newCards","selectedCard","selectedCardReducer","action","payload","bufferCard","room","userInfo","setUserInfo","token","userId","jwt","wait","globalWait","globalError","getGlobalError","error","title","setGlobalTitle","Provider","hash","str","secret","hashed","counter","coef","j","charCodeAt","url","auth","password","headers","fetch","method","body","JSON","stringify","response","newRoom","checkRoom","roomId","Signup","globalStore","useContext","info","setInfo","dataBuffer","setDataBuffer","current","setCurrent","failed","setFailed","failedMsg","setFailedMsg","setTitle","history","useHistory","handleSubmit","newData","toLowerCase","userid","hasil","status","json","Login","pathname","useLocation","state","onClick","Deck","kocok","temporaryValue","randomIndex","currentIndex","Math","floor","random","bagi","pop","Player","score","removeCard","indexes","getCards","compare","table","hand","tableCards","handCards","countTable","countHand","tableHigh","handHigh","highestTable","isSelected","isClickable","isShown","cardObj","clickHandler","setSelected","onPressHandle","role","aria-label","alt","src","CardBack","player","OpponentCards","players","renderPlayer","isTurning","data-left","activate","Action","text","active","PlayingCards","kocokHandler","lawanHandler","cussHandler","isTurn","opponentTotal","renderCard","style","height","PlayerCards","selectCard","tigaTempe","game","round","Boolean","Catet","renderPlayerScore","container","display","flexDirection","socket","Room","setIsPlaying","userCards","_setUserCards","opponents","setOpponents","setIsShown","useParams","useEffect","window","innerWidth","io","process","emit","disconnect","on","parse","gameState","order","playingCards","currentTurn","rawOpponent","user","rawUser","displayNames","setUserCards","reason","connect","deck","start","bagiin","playerCards","element","Lobby","localStorage","clear","ProtectedRoute","render","setRender","authenticated","setAuthenticated","to","AuthRoute","savedInfo","getItem","RoomRoute","setError","fetchCheckRoom","titleLength","App","setItem","path","exact","component","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6654f838.chunk.js","sourcesContent":["const { Card } = require('./card');\n\nconst recognize = (seq) => {\n  // return played cards sequence type\n  const cardNumbers = seq.map((card) => card.number);\n  const cardFaces = seq.map((card) => card.face);\n  const cardValues = seq.map((card) => card.numberValue);\n  cardValues.sort((a, b) => (a > b) ? 1 : -1);\n  let straightCounter = 0;\n  for (let i = 0; i < cardValues.length - 1; i++) {\n    if ((cardValues[i] - cardValues[i + 1]) === -1) {\n      straightCounter++;\n    }\n  }\n  const countNumbers = {};\n  const countFaces = {};\n  cardNumbers.forEach((x) => { countNumbers[x] = (countNumbers[x] || 0) + 1; });\n  cardFaces.forEach((x) => { countFaces[x] = (countFaces[x] || 0) + 1; });\n  //console.log('recognize', countNumbers);\n  //console.log('length', Object.keys(countNumbers).length);\n  \n  switch (seq.length) {\n    case 1:\n      return 'satuan';\n    case 2:\n      return Object.keys(countNumbers).length === 1 ? 'pair' : '';\n\n    case 3:\n      return Object.keys(countNumbers).length === 1 ? 'tris' : '';\n\n    case 5:\n      if (Object.keys(countFaces).length === 1) {\n        if (straightCounter === 4) {\n          let royalCounter = 0;\n          cardNumbers.forEach((number) => {\n            if (['10', 'A', 'J', 'K', 'Q'].includes(number)) {\n              royalCounter++;\n            }\n          });\n          if (royalCounter === 5) {\n            return 'royalflush';\n          }\n          return 'straightflush';\n        }\n        return 'flush';\n      }\n      if (Object.keys(countNumbers).length === 2) {\n        if (countNumbers[Object.keys(countNumbers)[0]] === 4 || countNumbers[Object.keys(countNumbers)[1]] === 4) {\n          return 'bomb';\n        }\n        return 'fullhouse';\n      }\n      if (straightCounter === 4) {\n        return 'straight';\n      }\n      return '';\n\n    default:\n      if (Object.keys(countNumbers).includes('2')) {\n        if (countNumbers['2'] === 4) {\n          return 'kabeh2';\n        }\n      }\n      if (straightCounter === 12) {\n        return 'dragon';\n      }\n      return '';\n  }\n};\n\nexport class CardSequence {\n  // Card(s) container. Possible to only have one card (satuan)\n  constructor() {\n    this.cards = [];\n    this.length = this.cards.length;\n    this.type = '';\n    this.cardTable = {};\n  }\n\n  addCards(names) {\n    // add card into sequence\n    names.forEach((name) => {\n      if (!this.cardTable[name]) {\n        this.cardTable[name] = 1;\n        this.cards.push(new Card(name));\n      }\n    });\n    this.update();\n  }\n\n  removeCards(cardDisplayNames) {\n    // remove card from sequence\n    // return removed card\n    cardDisplayNames.forEach((cardDisplayName) => {\n      this.cards = this.cards.filter((card) => card.displayName !== cardDisplayName)\n      delete this.cardTable[cardDisplayName];\n    })\n    this.update();\n  }\n\n  update() {\n    // update instance condition\n    this.length = this.cards.length;\n    this.cards.sort((a, b) => (a.value > b.value) ? 1 : -1);\n    this.type = recognize(this.cards);\n  }\n}\n","const numbers = ['3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A', '2'];\nexport const numberValues = {};\nnumbers.forEach((number, i) => {\n  numberValues[number] = i;\n});\nconst faces = {\n  Diamond: '♦',\n  Club: '♣️',\n  Heart: '♥',\n  Spade: '♠️',\n};\nexport const facesRange = {\n  Diamond: 0,\n  Club: 1,\n  Heart: 2,\n  Spade: 3,\n};\nexport const paket = {\n  pair: 0,\n  tris: 1,\n  straight: 2,\n  flush: 3,\n  fullhouse: 4,\n  bomb: 5,\n  straightflush: 6,\n  royalflush: 7\n};\nexport const baseDeck = {};\n\nlet index = 0;\nnumbers.forEach((number) => {\n  // Initialized baseDeck to have 3 diamond until 2 spade\n  Object.keys(faces).forEach((face) => {\n    baseDeck[`${number} ${face}`] = index;\n    index++;\n  });\n});\n\nexport class Card {\n  // Card class. Hold each card value, face, condition, and image\n  constructor(name) {\n    const splitted = name.split(' ');\n    this.value = baseDeck[name];\n    [this.number, this.face] = splitted;\n    this.numberValue = numberValues[this.number];\n    this.suitEmoji = faces[this.face];\n    this.color = (this.face === 'Heart' || this.face === 'Diamond') ? 'red' : 'black';\n    this.displayName = name;\n  }\n}\n","module.exports = __webpack_public_path__ + \"static/media/cardback.6ca01611.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport Fade from 'react-bootstrap/Fade'\n\nconst StyledDiv = styled.div`\n  display: flex;\n  width: 50%;\n  height: 50%;\n  flex-direction: column;\n  .field_container {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 10px;\n    width: 100%;\n  };\n  .title_registration {\n    margin-top: 1em;\n    font-size: ${props => 5 * props.width}em;\n  }\n  .name {\n    color: white;\n    font-family: inherit;\n    width: 100%;\n    border: 0;\n    border-bottom: 2px solid white;\n    outline: 0;\n    font-size: ${props => 3 * props.width}em;\n    padding: 7px 0;\n    background: transparent;\n    transition: border-color 0.2s;\n    &::placeholder {\n      color: transparent;\n    };\n  \n    &:placeholder-shown ~ .label {\n      font-size: ${props => 4 * props.width}rem;\n      cursor: text;\n      top: 20px;\n    };\n  };\n  .label {\n    position: absolute;\n    top: 0;\n    display: block;\n    transition: 0.2s;\n    font-size: ${props => 2 * props.width}rem;\n  };\n  .name:focus {\n    ~ .label {\n      position: absolute;\n      top: -${props => 35 * props.width}%;\n      display: block;\n      transition: 0.2s;\n      font-size: ${props => 3 * props.width}rem;\n      color: red;\n      font-weight:700;    \n    };\n    padding-bottom: 6px;\n    font-weight: 700;\n    border-width: 5px;\n    border-image: linear-gradient(to right, red, blue);\n    border-image-slice: 1;\n  };\n  .info {\n    width: 100%;\n  }\n };\n`;\n\nconst FieldInput = ({data, show = 0, width, bufferHandler, bufferValue, submitHandler}) => {\n  // Main room for players come and play a game\n  // Connection to server using socket goes here.\n  const fields = data.map((field, i) => (\n    <Fade in={i === show} unmountOnExit={true} key={field.name}>\n      <StyledDiv className='centered' width={width}>\n        <div className='field_container'>\n          <input \n            id={field.name}\n            className=\"name\"\n            type={field.type}\n            minLength={field.min}\n            maxLength={field.max}\n            value={bufferValue}\n            autoFocus={show !== 0}\n            placeholder=\"Jangan\"\n            onChange={(e) => bufferHandler(e.target.value)}\n            onKeyUp={(e) => e.keyCode === 13 ? submitHandler(field.name) : null}/>\n          <label htmlFor={field.name} className=\"label\">{field.name}</label>\n        </div>\n        <div className='info'>{field.litleInfo}</div>\n      </StyledDiv>\n    </Fade>\n  ))\n\n  return fields;\n};\n\nexport default FieldInput;","import React, { createContext, useState } from 'react';\nimport jwt from 'jwt-decode'\n\nimport { CardSequence } from 'util/engine/cardSequence';\n\nexport const StoreContext = createContext(null);\nexport default ({ children }) => {\n  const [globalWidthState, setGlobalWidth] = useState(1);\n  const [isPlayingState, setPlaying] = useState(false);\n  const [playingCardState, _setPlayingCard] = useState(new CardSequence());\n  const [selectedCardState, setSelectedCard] = useState(new CardSequence());\n  const [isPlayableState, setIsPlayable] = useState(false);\n  const [roomState, setRoom] = useState({});\n  const [globalWaitState, setGlobalWait] = useState(true);\n  const [waitState, setWait] = useState(false);\n  const [userInfoState, _setUserInfo] = useState({});\n  const [_globalError, setGlobalError] = useState('');\n  const [globalTitle, _setGlobalTitle] = useState('Banceng Mowal?');\n\n  const selectedCardReducer = (action, payload) => {\n    const bufferCard = selectedCardState;\n    switch(action){\n      case 'add':\n        bufferCard.addCards(payload);\n        setSelectedCard(bufferCard);\n        break;\n      \n      case 'remove':\n        bufferCard.removeCards(payload);\n        setSelectedCard(bufferCard);\n        break;\n\n      case 'reset':\n        setSelectedCard(new CardSequence());\n        break;\n      \n      default:\n        break;\n    }\n    setWait(false);\n  }\n\n  const setPlayingCard = (cards) => {\n    const newCards = new CardSequence();\n    newCards.addCards(cards);\n    _setPlayingCard(newCards);\n  }\n\n  const setUserInfo = (token) => {\n    if (token) {\n      const { userId } = jwt(token);\n      if (userId) {\n        _setUserInfo({ userId, token });\n      }\n    } else {\n      _setUserInfo({});\n    }\n    setGlobalWait(false);\n  }\n\n  const getGlobalError = () => {\n    const error = '' + _globalError;\n    setGlobalError('');\n    return error;\n  }\n\n  const setGlobalTitle = (title) => {\n    title ? _setGlobalTitle(title) : _setGlobalTitle('Banceng Mowal?');\n  };\n  \n  const store = {\n    globalWidth: [globalWidthState, setGlobalWidth],\n    isPlaying: [isPlayingState, setPlaying],\n    isPlayable: {isPlayableState, setIsPlayable},\n    playingCard: {playingCardState, setPlayingCard},\n    selectedCard: {selectedCardState, selectedCardReducer},\n    room: {roomState, setRoom},\n    userInfo: {userInfoState, setUserInfo},\n    wait: {waitState, setWait},\n    globalWait: {globalWaitState, setGlobalWait},\n    globalError: {getGlobalError, setGlobalError},\n    title: {globalTitle, setGlobalTitle}\n  };\n  return (\n    <StoreContext.Provider value={store}>\n      {children}\n    </StoreContext.Provider>\n  )\n};","export const hash = (str) => {\n  const secret = \"qwertyuiop[]\\\\asdfghjkl;'zxcvbnm,./`1234567890-=QWERTYUIOP{}|ASDFGHJKL:ZXCVBNM<>?~!@#$%^&*()_+\";\n  let hashed = '';\n  let counter = 0;\n  let coef = 0;\n  for(let j = 0; j < str.length; j++) {\n    coef += str[j].charCodeAt();\n  }\n  for(let i = 0; i < 20; i++) {\n    const ascii = str[i % str.length].charCodeAt();\n    counter += ascii + coef;\n    counter *= 107;\n    hashed += secret[counter % secret.length]; \n  }\n  return hashed;\n};\n","import { hash } from './auth';\n\nconst url = 'http://localhost:8080/';\n\nexport const auth = async ({ userId, password, type }) => {\n  // Wrapper function for fecthing user authentication\n  const hashed = hash(password);\n  try {\n    let headers = { 'Content-Type': 'application/json'};\n    const response = await fetch(url + 'auth/' + type, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({userId, password: hashed})\n    });\n    return response;\n  } catch (err) {\n    //console.log(err);\n  }\n};\n\nexport const newRoom = async ({token}) => {\n  // Wrapper function to get new roomId\n  try {\n    let headers = { \n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    };\n    const response = await fetch(url + 'room', {\n      method: 'POST',\n      headers\n    });\n    return response;\n  } catch (err) {\n    //console.log(err);\n  }\n};\n\nexport const checkRoom = async ({token, roomId}) => {\n  // Wrapper function to get new roomId\n  try {\n    let headers = { \n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    };\n    const response = await fetch(url + 'room/' + roomId, {\n      method: 'GET',\n      headers\n    });\n    return response;\n  } catch (err) {\n    //console.log(err);\n  }\n};","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from \"react-router-dom\";\n\nimport FieldInput from 'components/fieldInput';\n\nimport { StoreContext } from 'util/store';\nimport { auth } from 'util/fetch';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  color: white;\n  .container {\n    display: flex;\n    width: 50%;\n    height: 50%;\n    flex-direction: column;\n  }\n  .field_container {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 10px;\n    width: 100%;\n  };\n  .title_registration {\n    margin-top: 1em;\n    font-size: ${props => 5 * props.width}em;\n  };\n`;\n\nconst Signup = () => {\n  // Main room for players come and play a game\n  // Connection to server using socket goes here.\n  const globalStore = useContext(StoreContext);\n  const [ globalWidthState ] =  globalStore.globalWidth;\n  const { setUserInfo } = globalStore.userInfo;\n  const [ info, setInfo ] = useState({});\n  const [ dataBuffer, setDataBuffer ] = useState('');\n  const [ current, setCurrent ] = useState(0);\n  const [ failed, setFailed ] = useState(false);\n  const [ failedMsg, setFailedMsg ] = useState('');\n  const [ title, setTitle ] = useState('Daftar')\n  const history = useHistory();\n\n  const handleSubmit = async (name) => {\n    if (dataBuffer.length > 0) {\n      if (current < 2) {\n        if (current === 0) {\n          if (dataBuffer.includes(\" \")) {\n            setFailed(true);\n            setFailedMsg('JANGAN ADA SPASI!');\n          }\n        }\n        const newData = { ...info };\n        newData[name.toLowerCase()] = dataBuffer;\n        setInfo(newData);\n        setCurrent(current + 1);\n        setDataBuffer('');\n        setTitle('Daftar');\n      } else {\n        if (!failed) {\n          if (info.password === dataBuffer && !failed) {\n            const hasil = await auth({ userId: info.userid, password: info.password, type: 'signup' })\n            if (hasil.status === 406) {\n              setTitle('Udah ada yang punya.');\n              setCurrent(0);\n              setDataBuffer(info.userid);\n            } else if (hasil.status === 500) {\n              setTitle('Ada error coba lagi.');\n              setCurrent(0);\n              setDataBuffer(info.userid);\n            } else {\n              try {\n                const { token } = await hasil.json();\n                setUserInfo(token);\n                history.push(`/room/`);\n              } catch (err) {\n                setTitle('Ada error coba lagi.');\n                setCurrent(0);\n                setDataBuffer(info.userid);\n                //console.log(err)\n              }\n            }\n          } else {\n            setTitle('Password tidak sama.');\n            setCurrent(0);\n            setDataBuffer(info.userid);\n          }\n        } else {\n          setFailed(false);\n          setTitle(failedMsg);\n          setCurrent(0);\n          setDataBuffer(info.userid);\n        }\n      }\n    } else {\n      setTitle(`${name}nya mana?`);\n    }\n  };\n  \n  const fields = [\n    { \n      name: 'UserID', \n      type: 'text',\n      min: 5,\n      max: 10,\n      litleInfo: 'Jangan ada spasi.' \n    },\n    { \n      name: 'Password', \n      type: 'password',\n      min: 0,\n      max: 20,\n      litleInfo: 'Jangan aneh-aneh. Kalau lupa gak bisa direset.' \n    },\n    { \n      name: 'Confirm Password', \n      type: 'password',\n      min: 0,\n      max: 20,\n      litleInfo: 'Ulangin lagi.' \n    }\n  ];\n\n  return (\n    <StyledDiv width={globalWidthState}>\n      <h1 className='title_registration'>{title}</h1>\n      <FieldInput \n        width={globalWidthState}\n        show={current}\n        bufferHandler={setDataBuffer}\n        bufferValue={dataBuffer}\n        submitHandler={handleSubmit}\n        data={fields}\n      />\n    </StyledDiv>\n  );\n};\n\nexport default Signup;","import React, { useState, useContext } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport FieldInput from 'components/fieldInput';\n\nimport { StoreContext } from 'util/store';\nimport { auth } from 'util/fetch';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  color: white;\n  .container {\n    display: flex;\n    width: 50%;\n    height: 50%;\n    flex-direction: column;\n  };\n  .field_container {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 10px;\n    width: 100%;\n  };\n  .title_registration {\n    margin-top: 1em;\n    font-size: ${props => 5 * props.width}em;\n  };\n`;\n\nconst Login = () => {\n  // Main room for players come and play a game\n  // Connection to server using socket goes here.\n  const globalStore = useContext(StoreContext);\n  const [ globalWidthState ] =  globalStore.globalWidth;\n  const { setUserInfo } = globalStore.userInfo;\n  const [ info, setInfo ] = useState({});\n  const [ dataBuffer, setDataBuffer ] = useState('');\n  const [ current, setCurrent ] = useState(0);\n  const [ title, setTitle ] = useState('Masukin Dulu');\n  const history = useHistory();\n  const { pathname } = useLocation().state;\n  \n  const handleSubmit = async (name) => {\n    if (dataBuffer.length > 0) {\n      if (current < 1) {\n        const newData = { ...info };\n        newData[name.toLowerCase()] = dataBuffer;\n        setInfo(newData);\n        setCurrent(current + 1);\n        setDataBuffer('');\n        setTitle('Masukin Dulu');\n      } else {\n        const hasil = await auth({ userId: info.userid, password: dataBuffer, type: 'login' })\n        if (hasil.status === 403) {\n          setTitle('Password atau email salah.');\n          setCurrent(0);\n          setDataBuffer(info.userid);\n        } else if (hasil.status === 500) {\n          setTitle('Ada error coba lagi.');\n          setCurrent(0);\n          setDataBuffer(info.userid);\n        } else {\n          try {\n            const { token } = await hasil.json();\n            setUserInfo(token);\n            history.push(pathname || '/room');\n          } catch (err) {\n            setTitle('Ada error coba lagi.');\n            setCurrent(0);\n            setDataBuffer(info.userid);\n            //console.log(err)\n          }\n        }\n      }\n    } else {\n      setTitle(`${name}nya mana?`);\n    }\n  };\n  \n  const fields = [\n    { \n      name: 'UserID', \n      type: 'text',\n      min: 5,\n      max: 10,\n      litleInfo: '' \n    },\n    { \n      name: 'Password', \n      type: 'password',\n      min: 0,\n      max: 20,\n      litleInfo: ''\n    }\n  ];\n\n  return (\n    <StyledDiv width={globalWidthState}>\n      <h1 className='title_registration'>{title}</h1>\n      <FieldInput \n        width={globalWidthState}\n        show={current}\n        bufferHandler={setDataBuffer}\n        bufferValue={dataBuffer}\n        submitHandler={handleSubmit}\n        data={fields}\n      />\n      <div className='hoverable' onClick={() => history.push('signup')}>Daftar</div>\n    </StyledDiv>\n  );\n};\n\nexport default Login;","const { baseDeck } = require('./card');\n\nexport class Deck {\n  // Deck class. Holds card classes in beginning of each game. Initially sorted.\n  constructor() {\n    this.cards = Object.keys(baseDeck).map((name) => name);\n    this.length = 52;\n  }\n\n  kocok() {\n    // Shuffle current order or cards\n    // source: https://gomakethings.com/how-to-shuffle-an-array-with-vanilla-js/\n    let currentIndex = this.cards.length;\n    let temporaryValue;\n    let randomIndex;\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = this.cards[currentIndex];\n      this.cards[currentIndex] = this.cards[randomIndex];\n      this.cards[randomIndex] = temporaryValue;\n    }\n    return this.cards[this.length - 1];\n  }\n\n  bagi() {\n    // Return the top card and remove that from deck\n    this.length--;\n    return this.cards.pop();\n  }\n}\n","const { CardSequence } = require('./cardSequence');\n\nexport class Player {\n  // Player class. Has name and cards in hand.\n  constructor(name) {\n    this.name = name;\n    this.cards = new CardSequence();\n    this.score = 0;\n  }\n\n  addCards(names) {\n    this.cards.addCards(names);\n  }\n\n  removeCard(indexes) {\n    this.cards.removeCards(indexes);\n  }\n\n  getCards() {\n    return this.cards.cards;\n  }\n}\n","const { paket, facesRange, numberValues } = require('./card');\n\nexport const compare = (table, hand) => {\n  // Compare if cards in hand can beat what's in the table\n  // Return true if hand wins\n  if (table.length === 0) {\n    if (hand.length === 1 || Object.keys(paket).includes(hand.type)){\n      return true;\n    }\n    return false;\n  }\n  if (table.length === hand.length) {\n    switch (table.length) {\n      case 1:\n        return table.type === hand.type ? hand.cards[0].value > table.cards[0].value : false;\n\n      case 2:\n        return table.type === hand.type ? hand.cards[1].value > table.cards[1].value : false;\n\n      case 3:\n        return table.type === hand.type ? hand.cards[1].value > table.cards[1].value : false;\n\n      case 5:\n        if (table.type === hand.type) {\n          // if paket ties\n          const tableCards = table.cards.map((card) => card.number);\n          const handCards = hand.cards.map((card) => card.number);\n          const countTable = {};\n          const countHand = {};\n          let tableHigh = '';\n          let handHigh = '';\n\n          if (['fullhouse', 'bomb'].includes(table.type)) {\n            tableCards.forEach((x) => { countTable[x] = (countTable[x] || 0) + 1; });\n            handCards.forEach((x) => { countHand[x] = (countHand[x] || 0) + 1; });\n            tableHigh = countTable[Object.keys(countTable)[0]] < countTable[Object.keys(countTable)[1]] ? Object.keys(countTable)[1] : Object.keys(countTable)[0];\n            handHigh = countHand[Object.keys(countHand)[0]] < countHand[Object.keys(countHand)[1]] ? Object.keys(countHand)[1] : Object.keys(countHand)[0];\n          }\n\n          switch (table.type) {\n            case 'straight':\n              if (tableCards.includes('2') && handCards.includes('2')) {\n                return hand.cards[3].value > table.cards[3].value;\n              }\n              if (tableCards.includes('2') || handCards.includes('2')) {\n                return tableCards.includes('2');\n              }\n              return hand.cards[4].value > table.cards[4].value;\n\n            case 'flush':\n              if (table.cards[0].face === hand.cards[0].face) {\n                const highestTable = tableCards.includes('2') ? tableCards[3] : tableCards[4];\n                const highestHand = handCards.includes('2') ? handCards[3] : handCards[4];\n                return highestHand > highestTable;\n              }\n              return facesRange[hand.cards[0].face] > facesRange[table.cards[0].face];\n\n            case 'fullhouse':\n              if (tableHigh === '2' || handHigh === '2') {\n                return tableHigh === '2';\n              }\n              return numberValues[handHigh] > numberValues[tableHigh];\n\n            case 'bomb':\n              return numberValues[handHigh] > numberValues[tableHigh];\n\n            case 'straighflush':\n              if (table.cards[0].face === hand.cards[0].face) {\n                if (tableCards.includes('2') || handCards.includes('2')) {\n                  return tableCards.includes('2');\n                }\n                return numberValues[handCards[4]] > numberValues[tableCards[4]];\n              }\n              return facesRange[hand.cards[0].face] > facesRange[table.cards[0].face];\n\n            default:\n              return '';\n          }\n        } else {\n          // paket different type\n          return paket[hand.type] > paket[table.type];\n        }\n\n      default:\n        return '';\n    }\n  } else {\n    return '';\n  }\n};\n\nexport const bagiin = (players, deck, start = 'A') => {\n  // bagiin cards based on deck equally to players in any given start position\n  start = numberValues[start] - 1;\n  start %= players.length;\n  let counter = start;\n  while (deck.length > 0) {\n    players[counter].addCards([deck.bagi()]);\n    counter++;\n    if (counter === players.length) {\n      counter = 0;\n    }\n  }\n};\n","import React, { useState } from 'react';\nimport CardBack from 'assets/images/cardback.jpg';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  width: ${props => props.width}em;\n  height: ${props => props.width * 1.4}em;\n  background-color: white;\n  color: ${props => props.color };\n  border-radius: 3px;\n  flex-direction: column;\n  box-shadow: 3px 4px rgba(0, 0, 0, 0.2);\n  margin: 0.2em;\n  border-color: navy;\n  ${props => props.isSelected ? 'border-style: solid;' : ''}\n  &:hover{\n    cursor: ${props => props.isClickable ? 'pointer' : 'default'};\n  };\n  .cardNumber{\n    font-family: Pokerface;\n    font-size: ${props => props.width * 0.3}em;\n    margin: 10% auto 20% auto;\n    align-Self: flex-start;\n  };\n  .cardFace{\n    font-size: ${props => props.width * 0.4}em;\n    width: 100%;\n    color: ${props => props.color };\n  };\n  img{\n    height: 100%;\n    width: 100%;\n  };\n`;\n\nconst Card = ({ width , isClickable, isShown, cardObj, clickHandler}) => {\n  // Card component\n  // render card face and number\n  // accept: width (size), isClickable, isShown, face, number\n\n  const [isSelected, setSelected] = useState(false);\n\n  // 5 for middle\n  // 4 for bottom\n  // 7 for top\n\n  const onPressHandle = () => {\n    // toggle isSelected state\n    if(clickHandler) {\n      //console.log('clicked');\n      \n      clickHandler(isSelected, cardObj.displayName);\n    }\n    setSelected(!isSelected)\n  }\n  if (isShown) {\n    return (\n      <StyledDiv color={cardObj.color} width={width} isSelected={isSelected} isClickable={isClickable} onClick={isClickable ? onPressHandle : null}>\n        <h1 className=\"centered cardNumber\">{cardObj.number}</h1>\n        <div className=\"centered cardFace\"><span role=\"img\" aria-label=\"\">{cardObj.suitEmoji}</span></div>\n      </StyledDiv>\n    )\n  } else {\n    return (\n      <StyledDiv width={width}>\n        <img alt=\"Card\" src={CardBack}/>\n      </StyledDiv>\n    )\n  }\n};\n\nexport default Card;\n\n// <h1 style={cardTitle}>A</h1>\n// <div style={cardSuit}>♣️</div>\n//#22313f","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport Card from 'components/card';\nimport { StoreContext } from 'util/store';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 1em;\n  height: 33%;\n  .column{\n    width: ${props => 100 / props.player}%;\n    flex-direction: column;\n  };\n  .name{\n    font-size: ${props => 2 * props.width}em;\n    margin-top: 0.2em;\n    color: white;\n  };\n  .isTurning{\n    text-shadow: -1px 0 yellow, 0 1px yellow, 1px 0 black, 0 -1px yellow;\n    color: navy;\n  };\n  .name[data-left]:after {\n    content: attr(data-left);\n    position: absolute;\n    font-size: .7em;\n    background: red;\n    color: white;\n    width: 1.4em;\n    height: 1.4em;\n    text-align: center;\n    border-radius:50%;\n    box-shadow:0 0 1px #333;\n };\n`;\n\nconst OpponentCards = ({ data=[] }) => {\n  const { globalWidth } =  useContext(StoreContext);\n  const players = data.length;\n  const renderPlayer = data.map((player) => (\n    <div key={player.userId} className=\"centered column\">\n      <Card width={7 * globalWidth[0]}/>\n      <div className={`name ${player.isTurning ? 'isTurning' : null}`} data-left={player.cards}>\n        {player.userId}\n      </div>\n    </div>\n  ));\n\n  return (\n    <StyledDiv player={players} width={globalWidth[0]}>\n      {renderPlayer}\n    </StyledDiv>\n  )\n};\n\nexport default OpponentCards;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { StoreContext } from 'util/store';\n\nconst StyledDiv = styled.div`\n  .btn {\n    background-color: ${props => props.color};\n    color: white;\n    font-size: ${props => props.width * 3}em;\n    width: 3em;\n    height: 3em;\n    border-radius: 10em;\n  };\n  .btn:hover{\n    cursor: ${props => props.activate ? 'pointer' : 'default'};\n  };\n`;\n\nconst Action = ({ color, clickHandler, text, active }) => {\nconst { globalWidth } =  useContext(StoreContext);\n  return (\n      <StyledDiv \n        activate={active} \n        width={globalWidth[0]} \n        className=\"centered\" \n        onClick={active ? clickHandler : null} \n        color={color}>\n        <div className=\"centered btn\">\n          {text}\n        </div>\n      </StyledDiv>\n  )\n};\n\nexport default Action;","import React, { useContext } from 'react';\n\nimport Card from 'components/card';\nimport Action from './actionButton';\nimport { StoreContext } from 'util/store';\n\n\nconst PlayingCards = ({ kocokHandler, lawanHandler, cussHandler, isTurn, opponentTotal }) => {\n  const globalStore = useContext(StoreContext);\n  const { globalWidth } =  globalStore;\n  const [isPlayingState ] = globalStore.isPlaying;\n  const { playingCardState } = globalStore.playingCard;\n  const { selectedCardState, selectedCardReducer } = globalStore.selectedCard;\n  const { isPlayableState } = globalStore.isPlayable;\n\n  const _lawanHandler = () => {\n    //send selected Card to server\n    lawanHandler(selectedCardState);\n    selectedCardReducer('reset');\n  };\n\n  const renderCard = playingCardState.cards.map((card) => (\n    <Card \n      key={card.displayName}\n      isShown\n      width={5 * globalWidth[0]} \n      cardObj={card}\n    />\n  ));\n  //console.log(isPlayableState, isTurn, selectedCardState.length > 0, isPlayableState && isTurn && selectedCardState.cards.length > 0);\n\n  \n  return (\n    <div style={{height: '33%'}} className=\"centered\">\n      <div style={{width: '25%'}}  className=\"centered\">\n        {isPlayingState ? <Action \n          active={isTurn && playingCardState.length > 0}\n          text=\"Cuss\"\n          clickHandler={cussHandler}\n          color={ isTurn && playingCardState.length > 0 ? '#19b5fe' : '#013243'}\n          /> : null}\n      </div>\n      <div style={{width: '50%'}}  className=\"centered\">\n        {renderCard}\n      </div>\n      <div style={{width: '25%'}}  className=\"centered\">\n        {isPlayingState ? (\n          <Action\n            active={isPlayableState && isTurn && selectedCardState.length > 0} \n            text=\"Lawan\"\n            clickHandler={_lawanHandler} \n            color={isPlayableState && isTurn && selectedCardState.length > 0 ? \"#f03434\" : \"#96281b\"}/>) : (\n          <Action \n            active={opponentTotal > 0} \n            text=\"Kocok\" \n            clickHandler={kocokHandler} \n            color={opponentTotal > 0 ? \"#f03434\" : \"#96281b\"}/>)}\n      </div>\n    </div>\n  )\n};\n\nexport default PlayingCards;","import React, { useContext } from 'react';\n\nimport Card from 'components/card';\nimport { StoreContext } from 'util/store';\nimport { compare } from 'util/engine/engine';\n\nconst PlayerCards = ({ cards=[] }) => {\n  const globalStore = useContext(StoreContext);\n  const { globalWidth } =  globalStore\n  const { playingCardState } = globalStore.playingCard;\n  const { selectedCardState, selectedCardReducer } = globalStore.selectedCard;\n  const { setIsPlayable } = globalStore.isPlayable;\n  const { roomState } = globalStore.room;\n  const { setWait } = globalStore.wait;\n\n  const selectCard = (isSelected, cardObj) => {\n    let tigaTempe = true;\n    if (isSelected) {\n      selectedCardReducer('remove', [cardObj]);\n      if (roomState.game === 0 && roomState.round === 0) {\n        tigaTempe = Boolean(selectedCardState.cardTable['3 Diamond']);\n      }\n      setIsPlayable(compare(playingCardState, selectedCardState) && tigaTempe);\n    } else {\n      selectedCardReducer('add', [cardObj]);\n      if (roomState.game === 0 && roomState.round === 0) {\n        tigaTempe = Boolean(selectedCardState.cardTable['3 Diamond']);\n      }\n      setIsPlayable(compare(playingCardState, selectedCardState) && tigaTempe);\n    }\n    setWait(true);\n  }\n\n  const renderCard = cards.map((card, i) => (\n    <Card \n      key={card.displayName} \n      isShown\n      isClickable\n      width={4 * globalWidth[0]}\n      clickHandler={selectCard}\n      cardObj={card}\n    />\n  ));\n\n  return (\n    <div style={{height: '33%'}} className=\"centered\">\n        {renderCard}\n    </div>\n  )\n};\n\nexport default PlayerCards;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\n\nimport { StoreContext } from 'util/store';\n\nconst StyledDiv = styled.div`\n  background-color: rgba(255,0,0);\n  position: absolute;\n  z-index: 100;\n  padding: 0.5em;\n  color: white;\n  font-size: ${props => props.width * 1.7}em;\n  border-radius: 5px;\n  display: flex;\n  width: 15vw;\n  height: ${props => props.width < 1 ? props.isShown ? '42vh' : '12vh' : props.isShown ? '35vh': '6vh'};\n  flex-direction: column;\n  .userScore {\n    margin-bottom: 0.7em;\n  };\n`;\n\nconst Catet = ({ players=[], game=0, isShown=false, clickHandler }) => {\n  const { globalWidth } =  useContext(StoreContext);\n  const renderPlayerScore = players.map((player) => (\n    <div key={player.userId} className='userScore'>\n      {`${player.userId}: ${player.score}`}\n    </div>\n  ));\n\n  return (\n    <StyledDiv className='hoverable' width={globalWidth[0]} isShown={isShown} onClick={clickHandler}>\n      <h3 className='centered'>CATETAN</h3>\n      {isShown ? renderPlayerScore : null}\n      {isShown ? `Game ke-${game}` : null}\n    </StyledDiv>\n  )\n};\n\nexport default Catet;\n\n// supposed to be name not userId temporary","import React, { useState, useContext, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom'\nimport io from 'socket.io-client';\n\nimport { StoreContext } from 'util/store';\nimport { Deck } from 'util/engine/deck';\nimport { Player } from 'util/engine/player';\nimport { bagiin } from 'util/engine/engine';\nimport { CardSequence } from 'util/engine/cardSequence';\n\nimport OpponentCards from 'components/opponentCards';\nimport PlayingCards from 'components/playingCards';\nimport PlayerCards from 'components/playerCards';\nimport Catet from 'components/catet';\n\nconst container = {\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  height: '100%'\n};\n\nconst ENDPOINT = process.env.REACT_APP_SERVER_ENDPOINT;\nconst link = process.env.REACT_APP_ENDPOINT;\nlet socket;\n\nconst Room = () => {\n  // Main room for players come and play a game\n  // Connection to server using socket goes here.\n  const globalStore = useContext(StoreContext);\n  const [ globalWidthState, setGlobalWidth ] =  globalStore.globalWidth;\n  const [isPlayingState, setIsPlaying] = globalStore.isPlaying;\n  const {roomState, setRoom} = globalStore.room;\n  const { selectedCardReducer } = globalStore.selectedCard;\n  const { setGlobalTitle } = globalStore.title;\n  const [userCards, _setUserCards] = useState([]);\n  const [opponents, setOpponents] = useState([]);\n  const [isShown, setIsShown] = useState(false);\n  const { playingCardState, setPlayingCard } = globalStore.playingCard;\n  const { roomId } = useParams();\n  const history = useHistory();\n  const { userInfoState } = globalStore.userInfo;\n  const { setGlobalError } = globalStore.globalError;\n  const { userId, token } = userInfoState;\n\n  const setUserCards = (displayNames) => {\n    const cards = new CardSequence();\n    cards.addCards(displayNames);\n    _setUserCards(cards.cards);\n  }\n\n  const changeWidth = () => {\n    if (window.innerWidth < 900 * globalWidthState) {\n      setGlobalWidth(window.innerWidth / 1700);\n    }\n  };\n  useEffect(() => {\n    changeWidth();\n  }, [window.innerWidth]); // eslint-disable-line\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n      //console.log(\"connecting socket....\");\n      //console.log(JSON.stringify({ token, type: 'ENTER ROOM',  payload: { roomId, userId }}));\n      socket.emit('room', JSON.stringify({ token, type: 'ENTER ROOM',  payload: { roomId, userId }}), ({error}) => {\n        if(error) {\n          switch(error) {\n            case \"You're already in the room\":\n              setGlobalError('Udah di dalem, ngapain masuk lagi?');\n              history.push('/');\n              break;\n            \n            case \"Room is on a game\":\n              setGlobalError('Kalem se-game dulu.');\n              history.push('/');\n              break;\n\n            case \"Room is full\":\n              setGlobalError('Lapak penuh.');\n              history.push('/');\n              break;\n            \n            default:\n              history.push('/');\n              break;\n          }\n        }\n      });\n    return () => { \n      setGlobalTitle();\n      socket.disconnect();\n    }\n  }, []); // eslint-disable-line\n\n  useEffect(() => {\n    socket.on('update', (payload) => {\n      // Update current game state\n      const payloadParsed = JSON.parse(payload);\n      const { room } = payloadParsed;\n      //console.log(payloadParsed);\n      //console.log(room);\n      const { gameState, isPlaying, title, order} = room;\n      const { players, playingCards, currentTurn, game, round } = gameState;\n      const rawOpponent = players.filter((user) => user.userId !== userId);\n      const rawUser = players.filter((user) => user.userId === userId)[0];\n      setGlobalTitle(title);\n      selectedCardReducer('reset');\n      setOpponents(order[userId].map((id) => { \n        const user = rawOpponent.filter((user) => user.userId === id)[0];\n        return {\n          userId: user.userId,\n          name: user.name,\n          cards: user.cards.length, \n          isTurning: currentTurn === user.userId\n        }\n      }));  \n      setPlayingCard(playingCards);\n      //console.log(rawUser.cards);\n      setUserCards(rawUser.cards);\n      setIsPlaying(isPlaying);\n      setRoom({...roomState, players, game, isTurn: currentTurn === userId, round});\n    });\n\n    socket.on('disconnect', (reason) => {\n      if (reason === 'io server disconnect') {\n        // the disconnection was initiated by the server, you need to reconnect manually\n        socket.connect();\n      }\n      // else the socket will automatically try to reconnect\n    });\n  }, []); // eslint-disable-line\n\n  \n  const kocokHandler = () => {\n    //Initiate game by creating deck, shuffle, and bagi the shuffled deck\n    if(!isPlayingState && playingCardState.length === 0 && opponents.length > 0) {\n      const deck = new Deck();\n      deck.kocok();\n      const bufferPlayersIds = [...opponents, {userId}];\n      const players = bufferPlayersIds.map((id) => new Player(id.userId));\n      bagiin(players, deck);\n      const cards = {};\n      players.forEach((player) => {\n        const playerCards = {};\n        player.getCards().forEach((element) => {playerCards[element.displayName] = 1;});\n        cards[player.name] = playerCards;\n        // supposed to be id but name is used for now\n      });\n      socket.emit('room', JSON.stringify({ token, type: 'START GAME', payload: { cards, roomId, userId } }), ({error}) => {\n        //console.log(error);\n      });\n    }\n  }\n\n  const lawanHandler = (cards) => {\n    // next turn with given cards sequence\n    // send cards to server\n    \n    if (cards.length === userCards.length) {\n      socket.emit('room', JSON.stringify({\n        token,\n        type: 'NUTUP',\n        payload: { roomId, userId }\n      }), ({error}) => {\n        //console.log(error);\n      });\n    } else {\n      //console.log('lawan', cards);\n      const displayNames = cards.cards.map((card) => card.displayName);\n      socket.emit('room', JSON.stringify({\n        token,\n        type: 'LAWAN',\n        payload: { cards: displayNames, roomId, userId }\n      }), ({error}) => {\n        //console.log(error);\n      });\n    }\n  };\n\n  const cussHandler = () => {\n    socket.emit('room', JSON.stringify({\n      token,\n      type: 'CUSS',\n      payload: { roomId, userId }\n    }), ({error}) => {\n      //console.log(error);\n    });\n  };\n  \n  return (\n    <div style={container}>\n        <Catet\n          isShown={isShown} \n          clickHandler={() => setIsShown(!isShown)} \n          players={roomState.players}\n          game={roomState.game}\n      />\n      <OpponentCards data={opponents}/>\n      {isPlayingState ? null : <div className='centered' style={{flexDirection: 'column', color: 'white'}}>\n        <div>Link: {`${link}/room/${roomId}`}</div>\n        <div>Room ID: {roomId}</div>\n      </div>}\n      <PlayingCards \n        kocokHandler={kocokHandler}\n        lawanHandler={lawanHandler}\n        cussHandler={cussHandler}\n        isTurn={roomState.isTurn}\n        opponentTotal={opponents.length}\n      />\n      <PlayerCards cards={userCards}/>\n    </div>\n  );\n};\n\nexport default Room;\n\n// <Catet players={roomState.players} game={roomState.game}/>","import React, {useContext, useState, useEffect} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport styled from 'styled-components';\n\nimport FieldInput from 'components/fieldInput';\n\nimport { StoreContext } from 'util/store';\nimport { newRoom } from 'util/fetch';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  color: white;\n  .container {\n    display: flex;\n    width: 50%;\n    height: 50%;\n    flex-direction: column;\n  };\n  .field_container {\n    position: relative;\n    padding: 15px 0 0;\n    margin-top: 10px;\n    width: 100%;\n  };\n  .title_registration {\n    margin-top: 1em;\n    font-size: ${props => 5 * props.width}em;\n  };\n`;\n\nconst Lobby = () => {\n  const history = useHistory();\n  const globalStore = useContext(StoreContext);\n  const [ globalWidthState ] = globalStore.globalWidth;\n  const { userInfoState } = globalStore.userInfo;\n  const { getGlobalError } = globalStore.globalError;\n  const { setUserInfo } = globalStore.userInfo;\n  const { token } = userInfoState;\n  const [room, setRoom] = useState('');\n  const [title, setTitle] = useState('Masuk Lapak');\n\n  useEffect(() => {\n    const error = getGlobalError();\n    if (error.length > 0) {\n      setTitle(error);\n    }\n  }, []) // eslint-disable-line\n\n  const handleSubmit = async () => {\n    if (room) {\n      if (room.length === 10) {\n        history.push(`/room/${room}`);\n      } else {\n        setTitle('Ngawur, gak ada lapaknya!');\n      }\n    } else {\n      //console.log('asking for new room');\n      const response = await newRoom({token});\n      if (response.status === 500) {\n        setTitle('Ada error coba lagi.');\n      } else {\n        try {\n          const { roomId } = await response.json();\n          //console.log(roomId);\n          history.push(`/room/${roomId}`);\n        } catch (err) {\n          setTitle('Ada error coba lagi.');\n          //console.log(err)\n        }\n      }\n    }\n  }\n\n  const handleLogout = () => {\n    localStorage.clear();\n    setUserInfo();\n    history.push('/');\n  }\n\n  const fields = [\n    {\n      name: 'RoomID', \n      type: 'text',\n      min: 0,\n      max: 10,\n      litleInfo: 'Kalau mau buka lapak baru, kosongin aja.'\n    }\n  ];\n\n  return (\n    <StyledDiv width={globalWidthState}>\n      <h1 className='title_registration'>{title}</h1>\n      <FieldInput \n        width={globalWidthState}\n        bufferHandler={setRoom}\n        bufferValue={room}\n        submitHandler={handleSubmit}\n        data={fields}\n      />\n      <div className='hoverable' onClick={handleLogout}>Logout</div>\n  </StyledDiv>\n  )\n};\n\nexport default Lobby;","import React, { useContext, useState, useEffect } from 'react';\nimport { Route, Redirect, useParams, useLocation } from 'react-router-dom';\n\nimport { StoreContext } from 'util/store';\nimport { checkRoom } from 'util/fetch';\n\nexport const ProtectedRoute = ({...props}) => {\n  const globalStore = useContext(StoreContext);\n  const { userInfoState } = globalStore.userInfo;\n  const { globalWaitState } = globalStore.globalWait;\n  const [render, setRender] = useState(false);\n  const [authenticated, setAuthenticated] = useState(false);\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (!globalWaitState) {\n      if (userInfoState.token) {\n        setAuthenticated(true);\n      }\n      setRender(true);\n    }\n  }, [globalWaitState]) // eslint-disable-line\n  //console.log('auth')\n  //console.log(authenticated, render, globalWaitState);\n  if (render) {\n    //console.log(authenticated);\n    return authenticated ? <Route {...props} /> : \n      <Redirect \n        to={{\n          pathname: '/login',\n          state: {pathname}\n        }}\n      />;\n  } else {\n    return null;\n  }\n};\n\nexport const AuthRoute = ({...props}) => {\n  const { userInfoState } = useContext(StoreContext).userInfo;\n  let render = false;\n\n  if (userInfoState.token) {\n    render = true;\n  } else {\n    const savedInfo = localStorage.getItem('rahasiaKita');\n    if (savedInfo) {\n      const { token } = JSON.parse(savedInfo);\n      render = Boolean(token);\n    }\n  }\n  \n  return render ? <Redirect to='/room'/> : <Route {...props} />;\n};\n\nexport const RoomRoute = ({...props}) => {\n  const globalStore = useContext(StoreContext);\n  const { userInfoState } = globalStore.userInfo;\n  const { setGlobalError } = globalStore.globalError;\n  const { token } = userInfoState;\n  const { roomId } = useParams();\n  const [render, setRender] = useState(false);\n  const [error, setError] = useState(false);  \n\n  useEffect(() => {\n    const fetchCheckRoom = async () => {\n      const response = await checkRoom({token, roomId});\n      if (response.status === 500) {\n        setGlobalError('Ada error coba lagi.');\n        setError(true);\n      } else if (response.status === 429) {\n        setGlobalError('Lapak penuh');\n        setError(true);\n      } else if (response.status === 404) {\n        setGlobalError('Ngawur, gak ada lapaknya!');\n        setError(true);\n      }\n      setRender(true);\n    }\n    fetchCheckRoom();\n  }, []) // eslint-disable-line\n\n    if (render) {\n      return error ? <Redirect to='/room'/> : <Route {...props} />;\n    } else {\n    return null\n  }\n}","import React, { useContext, useEffect } from 'react';\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Signup from 'container/signup';\nimport Login from 'container/login';\nimport Room from 'container/room';\nimport Lobby from 'container/lobby';\nimport { ProtectedRoute, AuthRoute, RoomRoute } from 'components/customRoute';\nimport { StoreContext } from 'util/store';\n\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n  .content {\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    padding: 0.5em;\n  };\n  .title {\n    height: 20vh;\n    width: 100%;\n    font-family: customFont;\n    font-size: ${props => props.width * (props.titleLength > 20 ? 7 : 10)}em;\n    color: white;\n    text-shadow: 0.1em 0.1em 0px #000000;\n  };\n  .page {\n    display: flex;\n    height: 70vh;\n    width: 100%;\n  }\n  .footer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    color: white;\n    width: 100%;\n    height: 5vh;\n  };\n`;\n\nconst App = () => {\n  const globalStore = useContext(StoreContext);\n  const [ globalWidthState, setGlobalWidth ] =  globalStore.globalWidth;\n  const { userInfoState, setUserInfo } = globalStore.userInfo;\n  const { setGlobalWait } = globalStore.globalWait;\n  const { globalTitle } = globalStore.title;\n  const history = useHistory();\n  \n  const changeWidth = () => {\n    if (window.innerWidth < 900 * globalWidthState) {\n      setGlobalWidth(window.innerWidth / 1700);\n    }\n  };\n\n  useEffect(() => {\n    changeWidth();\n  }, [window.innerWidth]); // eslint-disable-line\n\n  useEffect(() => {\n    const savedInfo = localStorage.getItem('rahasiaKita');\n    if (savedInfo) {\n      const { token } = JSON.parse(savedInfo);\n      if (!userInfoState.token || userInfoState.token !== token) {\n        setUserInfo(token);\n      }\n    } else {\n      if (userInfoState.token) {\n        const token = JSON.stringify({ userId: userInfoState.userId, token: userInfoState.token })\n        localStorage.setItem('rahasiaKita', token);\n      } else {\n        setGlobalWait(false);\n      }\n    }\n  }, [userInfoState]); // eslint-disable-line\n\n  return (\n    <StyledDiv width={globalWidthState} titleLength={globalTitle.length}>\n      <div className='content'>\n        <div>\n          <div onClick={() => history.push('/')} className='title centered hoverable'>{globalTitle}</div>\n        </div>\n        <div className='page centered'>\n          <Switch>\n            <Route path='/' exact><Redirect to='/room'/></Route>\n            <AuthRoute path=\"/signup\" component={Signup} exact/>\n            <AuthRoute path=\"/login\" component={Login} exact/>\n            <ProtectedRoute path=\"/room/\" component={Lobby} exact/>\n            <ProtectedRoute path=\"/room/:roomId\">\n              <RoomRoute>\n                <Room/>\n              </RoomRoute>\n            </ProtectedRoute>\n          </Switch>\n        </div>\n        <div className='footer centered'>\n          <div>Copyright © 2020 Jimmy 'Bang Koboi'</div> \n          <div><a href='https://github.com/Fazatholomew/banceng'>Github</a></div>\n        </div>\n      </div>\n    </StyledDiv>\n  )\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport StoreProvider from 'util/store';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <StoreProvider>\n    <Router>\n      <App/>\n    </Router>\n  </StoreProvider> , \n  document.getElementById('root')\n);\n"],"sourceRoot":""}